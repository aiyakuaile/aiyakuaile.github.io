"use strict";const MANIFEST="flutter-app-manifest",TEMP="flutter-temp-cache",CACHE_NAME="flutter-app-cache",RESOURCES={"flutter_bootstrap.js":"1d6e7ba62d8225415a1210a6f70486aa","version.json":"ff966ab969ba381b900e61629bfb9789","index.html":"0ff437d2721fb011362172a6b65cdd33","/":"0ff437d2721fb011362172a6b65cdd33","main.dart.js":"5b2e6653be577b207c949dd0b80c9e1f","flutter.js":"383e55f7f3cce5be08fcf1f3881f585c","favicon.png":"5dcef449791fa27946b3d35ad8803796","icons/Icon-192.png":"ac9a721a12bbc803b44f645561ecb1e1","icons/Icon-maskable-192.png":"c457ef57daa1d16f64b27b786ec2ea3c","icons/Icon-maskable-512.png":"301a7604d45b3e739efc881eb04896ea","icons/Icon-512.png":"96e752610906ba2a93c65f8abe1645f1","manifest.json":"0867c3e13649ac4d06fe34b7b3ddce08","assets/AssetManifest.json":"2efbb41d7877d10aac9d091f58ccd7b9","assets/NOTICES":"71d68ab9836b472b5b3002ebc7e2fda1","assets/FontManifest.json":"dc3d03800ccca4601324923c0b1d6d57","assets/AssetManifest.bin.json":"69a99f98c8b1fb8111c5fb961769fcd8","assets/packages/cupertino_icons/assets/CupertinoIcons.ttf":"e986ebe42ef785b27164c36a9abc7818","assets/shaders/ink_sparkle.frag":"ecc85a2e95f5e9f53123dcaf8cb9b6ce","assets/AssetManifest.bin":"693635b5258fe5f1cda720cf224f158c","assets/fonts/MaterialIcons-Regular.otf":"fa25acbb91e7b42937c5ff08fdac09b1","canvaskit/skwasm.js":"5d4f9263ec93efeb022bb14a3881d240","canvaskit/skwasm.js.symbols":"c3c05bd50bdf59da8626bbe446ce65a3","canvaskit/canvaskit.js.symbols":"74a84c23f5ada42fe063514c587968c6","canvaskit/skwasm.wasm":"4051bfc27ba29bf420d17aa0c3a98bce","canvaskit/chromium/canvaskit.js.symbols":"ee7e331f7f5bbf5ec937737542112372","canvaskit/chromium/canvaskit.js":"901bb9e28fac643b7da75ecfd3339f3f","canvaskit/chromium/canvaskit.wasm":"399e2344480862e2dfa26f12fa5891d7","canvaskit/canvaskit.js":"738255d00768497e86aa4ca510cce1e1","canvaskit/canvaskit.wasm":"9251bb81ae8464c4df3b072f84aa969b","canvaskit/skwasm.worker.js":"bfb704a6c714a75da9ef320991e88b03"},CORE=["main.dart.js","index.html","flutter_bootstrap.js","assets/AssetManifest.bin.json","assets/FontManifest.json"];async function downloadOffline(){var a=[],e=await caches.open(CACHE_NAME),s={};for(var t of await e.keys()){var c=t.url.substring(origin.length+1);""==c&&(c="/"),s[c]=!0}for(var n of Object.keys(RESOURCES))s[n]||a.push(n);return e.addAll(a)}function onlineFirst(a){return a.respondWith(fetch(a.request).then((e=>caches.open(CACHE_NAME).then((s=>(s.put(a.request,e.clone()),e))))).catch((e=>caches.open(CACHE_NAME).then((s=>s.match(a.request).then((a=>{if(null!=a)return a;throw e})))))))}self.addEventListener("install",(a=>(self.skipWaiting(),a.waitUntil(caches.open(TEMP).then((a=>a.addAll(CORE.map((a=>new Request(a,{cache:"reload"})))))))))),self.addEventListener("activate",(function(a){return a.waitUntil(async function(){try{var a=await caches.open(CACHE_NAME),e=await caches.open(TEMP),s=await caches.open(MANIFEST),t=await s.match("manifest");if(!t){for(var c of(await caches.delete(CACHE_NAME),a=await caches.open(CACHE_NAME),await e.keys())){var n=await e.match(c);await a.put(c,n)}return await caches.delete(TEMP),await s.put("manifest",new Response(JSON.stringify(RESOURCES))),void self.clients.claim()}var i=await t.json(),f=self.location.origin;for(var c of await a.keys()){var o=c.url.substring(f.length+1);""==o&&(o="/"),RESOURCES[o]&&RESOURCES[o]==i[o]||await a.delete(c)}for(var c of await e.keys()){n=await e.match(c);await a.put(c,n)}return await caches.delete(TEMP),await s.put("manifest",new Response(JSON.stringify(RESOURCES))),void self.clients.claim()}catch(a){console.error("Failed to upgrade service worker: "+a),await caches.delete(CACHE_NAME),await caches.delete(TEMP),await caches.delete(MANIFEST)}}())})),self.addEventListener("fetch",(a=>{if("GET"===a.request.method){var e=self.location.origin,s=a.request.url.substring(e.length+1);if(-1!=s.indexOf("?v=")&&(s=s.split("?v=")[0]),(a.request.url==e||a.request.url.startsWith(e+"/#")||""==s)&&(s="/"),RESOURCES[s])return"/"==s?onlineFirst(a):void a.respondWith(caches.open(CACHE_NAME).then((e=>e.match(a.request).then((s=>s||fetch(a.request).then((s=>(s&&Boolean(s.ok)&&e.put(a.request,s.clone()),s))))))))}})),self.addEventListener("message",(a=>{"skipWaiting"!==a.data?"downloadOffline"!==a.data||downloadOffline():self.skipWaiting()}));